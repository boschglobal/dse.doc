<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>User Guide on Dynamic Simulation Environment</title><link>https://boschglobal.github.io/dse.doc/docs/user/</link><description>Recent content in User Guide on Dynamic Simulation Environment</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://boschglobal.github.io/dse.doc/docs/user/index.xml" rel="self" type="application/rss+xml"/><item><title>Simer - Simulation Runner</title><link>https://boschglobal.github.io/dse.doc/docs/user/simer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://boschglobal.github.io/dse.doc/docs/user/simer/</guid><description>Synopsis Containerised simulation run-time.
# Run a simulation. $ simer path/to/simulation -stepsize 0.0005 -endtime 0.04 Simulation Setup Structure The structure of a simulation is flexible and can be arranged based on individual project needs. All paths used within a simulation configuration should be relative to the root of the simulation folder (i.e. the simulation path). The simer tool will search for YAML files contained within the simulation path and automatically configure, and then run, the contained simulation.</description></item><item><title>Builder - Simulation Development Platform</title><link>https://boschglobal.github.io/dse.doc/docs/user/builder/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://boschglobal.github.io/dse.doc/docs/user/builder/</guid><description>Synopsis Containerised simulation builder and supporting DSE Language (DSE Lang).
Describe a Simulation simulation arch=linux-amd64 channel network uses dse.fmi https://github.com/boschglobal/dse.fmi v1.1.32 model fmu_CAN dse.fmi.network_model channel network network_channel workflow generate-model var NETWORK_SIGNAL can_bus var MIME_TYPE &amp;#34;application/x-automotive-bus;interface=stream;type=frame;bus=can;schema=fbs;bus_id=1;node_id=2;interface_id=3&amp;#34; var MEASUREMENT measurement.txt var OUT_DIR {{.PATH}}/data workflow generate-fmimodelc var FMU_NAME example var SIGNAL_GROUPS network Use the Builder Tool # Build a simulation. $ cd examples/runnable $ builder runnable.dse $ task -y Run the Simulation # Run a simulation.</description></item><item><title>Report - Simulation Validation</title><link>https://boschglobal.github.io/dse.doc/docs/user/report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://boschglobal.github.io/dse.doc/docs/user/report/</guid><description>Synopsis Containerized simulation validation tool for Simer based simulations.
# Run the reports. $ dse-report path/to/simulation Report Tool Codespace The Codespace (aka Devcontainer) of the DSE Simulation Development Platform is pre-configured with a command for running the Report tool.
# Run the reports. $ dse-report path/to/simulation Setup Report is a containerized tool which validates a simulation using a collection of report templates included in the Report container.
# Latest Report Container: $ docker pull ghcr.</description></item><item><title>SDP - Simulation Development Platform</title><link>https://boschglobal.github.io/dse.doc/docs/user/sdp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://boschglobal.github.io/dse.doc/docs/user/sdp/</guid><description>Synopsis Simulation Development Platform (SDP) using Codespaces or DevContainers to code, build, and run DSE Simulations.
Setup GitHub Codespaces GitHub Codespaces provides a cloud-hosted development environment which is pre-configured for the SDP. This environment includes SDP Extensions and can be immediately used to build and run simulations.
Steps to use Codespaces: Go to the repository on GitHub. Click the Code button and choose Open with Codespaces. If you donâ€™t have an existing codespace, click New codespace to create one.</description></item></channel></rss>