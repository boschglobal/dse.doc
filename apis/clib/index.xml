<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C Lib API Reference on Dynamic Simulation Environment</title><link>https://boschglobal.github.io/dse.doc/apis/clib/</link><description>Recent content in C Lib API Reference on Dynamic Simulation Environment</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://boschglobal.github.io/dse.doc/apis/clib/index.xml" rel="self" type="application/rss+xml"/><item><title>FMI API Reference</title><link>https://boschglobal.github.io/dse.doc/apis/clib/fmi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://boschglobal.github.io/dse.doc/apis/clib/fmi/</guid><description>storage_get_bucket Returns a reference/pointer to the requested storage bucket.
Parameters model_desc (FmuModelDesc*) Model Descriptor. type (storage_type) Indicate the storage type bucket which should be retrieved. Returns storage_bucket* Reference to the requested storage bucket. NULL The specified storage bucket is not provisioned. FMU Model API The FMU Model API (a part of the DSE C Lib) provides a simplified interface for developing Models which adhere to the Modelica Association FMI Standard. It has the following notable capabilities:</description></item><item><title>Marshal API Reference</title><link>https://boschglobal.github.io/dse.doc/apis/clib/marshal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://boschglobal.github.io/dse.doc/apis/clib/marshal/</guid><description>Marshal API The Marshal API supports two modes of operation:
Marshalling of intrinsic data types between source and target where the target represents externally defined data structures. Marshalling of signal maps between a signal interface and the source data objects (of the marshalling sub-system). When these operations are combined it becomes possible to map signals to externally defined data structures (i.e. C style structs).
Component Diagram @startuml data-marshal-interface skinparam nodesep 55 skinparam ranksep 40 title Marshal Interface interface &amp;#34;Signals&amp;#34; as sig package &amp;#34;Controller&amp;#34; { component &amp;#34;Source&amp;#34; as sou component &amp;#34;Target&amp;#34; as tar } sig -right-&amp;gt; sou : out sig &amp;lt;-right- sou : in sou -right-&amp;gt; tar : out sou &amp;lt;-right- tar : in center footer Dynamic Simulation Environment @enduml Typedefs MarshalGroup typedef struct MarshalGroup { char* name; int count; MarshalKind kind; MarshalDir dir; MarshalType type; struct (anonymous struct at dse/clib/data/marshal.</description></item></channel></rss>