<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dynamic Simulation Environment â€“ C Lib API Reference</title><link>https://boschglobal.github.io/dse.doc/apis/clib/</link><description>Recent content in C Lib API Reference on Dynamic Simulation Environment</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://boschglobal.github.io/dse.doc/apis/clib/index.xml" rel="self" type="application/rss+xml"/><item><title>Apis: FMI API Reference</title><link>https://boschglobal.github.io/dse.doc/apis/clib/fmi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://boschglobal.github.io/dse.doc/apis/clib/fmi/</guid><description>
&lt;h2 id="fmu-model-api">FMU Model API&lt;/h2>
&lt;p>The FMU Model API (a part of the DSE C Lib) provides a simplified interface for
developing Models which adhere to the Modelica Association FMI Standard. It has
the following notable capabilities:&lt;/p>
&lt;ul>
&lt;li>Models are compatible with either FMI 2 or FMI 3 (selected via linker).&lt;/li>
&lt;li>Simple model lifecycle:
&lt;ul>
&lt;li>&lt;code>model_init()&lt;/code>&lt;/li>
&lt;li>&lt;code>model_step()&lt;/code> - only function needed for a minimal FMU implementation!&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Storage system with fast hash based index for all FMI Variable types, including binary data.&lt;/li>
&lt;li>Integration with &lt;a href="https://github.com/boschglobal/dse.standards/tree/main/dse/ncodec">DSE Network Codec API&lt;/a>
which provides a MIMEtype selected (and configured) CAN Virtual Buses. The Network Codec has a simple
to use programming interface:
&lt;ul>
&lt;li>&lt;code>ncodec_write()&lt;/code> / &lt;code>ncodec_flush()&lt;/code> - to send CAN frames&lt;/li>
&lt;li>&lt;code>ncodec_read()&lt;/code> - to receive CAN frames.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="component-diagram">Component Diagram&lt;/h3>
&lt;div hidden>
&lt;pre tabindex="0">&lt;code>@startuml fmu-model
title DSE C Lib - FMU Model
interface &amp;#34;FMI&amp;#34; as FmiIf
package &amp;#34;FMU&amp;#34; {
interface &amp;#34;Model IF&amp;#34; as ModelIf
component &amp;#34;Model&amp;#34; as Model
component &amp;#34;FMI Adapter&amp;#34; as FmiFmu
component &amp;#34;Storage&amp;#34; as Storage
}
component &amp;#34;Importer&amp;#34; as Importer
FmiIf -left- FmiFmu
FmiIf )-right- Importer
Model -right- ModelIf
ModelIf )-right- FmiFmu
Model .down.&amp;gt; Storage : use
FmiFmu .down.&amp;gt; Storage : use
center footer Dynamic Simulation Environment
@enduml
&lt;/code>&lt;/pre>&lt;/div>
&lt;p>&lt;img src="fmu-model.png" alt="">&lt;/p>
&lt;h3 id="example">Example&lt;/h3>
&lt;p>The following example shows a minimal model implementation which simply
increments a counter.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// Copyright 2023 Robert Bosch GmbH
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#include&lt;/span> &lt;span style="color:#8f5902;font-style:italic">&amp;lt;dse/clib/fmi/fmu.h&amp;gt;&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#include&lt;/span> &lt;span style="color:#8f5902;font-style:italic">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#define UNUSED(x) ((void)x)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#define VR_COUNT 42
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">model_step&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">FmuModelDesc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">model_desc&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">double&lt;/span> &lt;span style="color:#000">model_time&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">double&lt;/span> &lt;span style="color:#000">stop_time&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">UNUSED&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">model_time&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">UNUSED&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">stop_time&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">value_ref&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">storage_ref&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">model_desc&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">VR_COUNT&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">STORAGE_INT&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">value_ref&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87">NULL&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">value_ref&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">printf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;count: %d&lt;/span>&lt;span style="color:#4e9a06">\n&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">value_ref&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="linking">Linking&lt;/h3>
&lt;p>When building an FMU, link the following files:&lt;/p>
&lt;ul>
&lt;li>fmu.c : generic implementation parts&lt;/li>
&lt;li>storage.c : storage mechanism&lt;/li>
&lt;li>fmi2/fmi2fmu.c : version specific parts&lt;/li>
&lt;li>model.c : model specific parts&lt;/li>
&lt;/ul>
&lt;h2 id="typedefs">Typedefs&lt;/h2>
&lt;h3 id="fmuadapterdesc">FmuAdapterDesc&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">typedef&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000">FmuAdapterDesc&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#204a87;font-weight:bold">char&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">FmuLoadHandler&lt;/span> &lt;span style="color:#000">load_func&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">FmuInitHandler&lt;/span> &lt;span style="color:#000">init_func&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">FmuStepHandler&lt;/span> &lt;span style="color:#000">step_func&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">FmuUnloadHandler&lt;/span> &lt;span style="color:#000">unload_func&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">FmuSetVarHandler&lt;/span> &lt;span style="color:#000">set_var_func&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">FmuGetVarHandler&lt;/span> &lt;span style="color:#000">get_var_func&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="fmuinstdesc">FmuInstDesc&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">typedef&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000">FmuInstDesc&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#204a87;font-weight:bold">char&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#204a87;font-weight:bold">char&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">model_doc&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">FmuAdapterDesc&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">adapter&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">FmuStrategyDesc&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">strategy&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">inst_data&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">model_desc&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="fmumodeldesc">FmuModelDesc&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">typedef&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000">FmuModelDesc&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">FmuMemAllocFunc&lt;/span> &lt;span style="color:#000">mem_alloc&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">FmuMemFreeFunc&lt;/span> &lt;span style="color:#000">mem_free&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">instance_data&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">private&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">external_binary_free&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="fmustrategydesc">FmuStrategyDesc&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">typedef&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000">FmuStrategyDesc&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#204a87;font-weight:bold">char&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">FmuStrategyExecuteFunc&lt;/span> &lt;span style="color:#000">exec_func&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">FmuStrategyMapVariables&lt;/span> &lt;span style="color:#000">map_func&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">FmuStrategyToVariables&lt;/span> &lt;span style="color:#000">marshal_to_var_func&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">FmuStrategyFromVariables&lt;/span> &lt;span style="color:#000">marshal_from_var_func&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">FmuStrategyMapDestroy&lt;/span> &lt;span style="color:#000">map_destroy_func&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">double&lt;/span> &lt;span style="color:#000">step_size&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">double&lt;/span> &lt;span style="color:#000">model_time&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">double&lt;/span> &lt;span style="color:#000">stop_time&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">double&lt;/span> &lt;span style="color:#000">model_time_correction&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="storage_bucket">storage_bucket&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">typedef&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000">storage_bucket&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">storage_type&lt;/span> &lt;span style="color:#000">type&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">index&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="functions">Functions&lt;/h2>
&lt;h3 id="fmi2_cosim_execute">fmi2_cosim_execute&lt;/h3>
&lt;p>Applies an action (load, init, step etc) from an FMI2 CoSim execution strategy
to the specified FMU instance. The strategy action will call FMU methods
according to the FMI Standard.&lt;/p>
&lt;h4 id="parameters">Parameters&lt;/h4>
&lt;dl>
&lt;dt>inst (FmuInstDesc*)&lt;/dt>
&lt;dd>Model Descriptor, references various runtime functions and data.&lt;/dd>
&lt;dt>action (FmuStrategyAction)&lt;/dt>
&lt;dd>The action which should be executed by the strategy.&lt;/dd>
&lt;/dl>
&lt;h4 id="returns">Returns&lt;/h4>
&lt;dl>
&lt;dt>0&lt;/dt>
&lt;dd>Success, an equivalent status is passed to the FMU Importer.&lt;/dd>
&lt;dt>!0&lt;/dt>
&lt;dd>Failure, an equivalent status is passed to the FMU Importer.&lt;/dd>
&lt;/dl>
&lt;h3 id="model_create">model_create&lt;/h3>
&lt;p>Creates an FMU Model Descriptor object and performs any necessary
initialisation of the FMU Model.&lt;/p>
&lt;p>Called by &lt;code>fmi2Instantiate()&lt;/code>.&lt;/p>
&lt;p>Called by &lt;code>fmi3InstantiateCoSimulation()&lt;/code>.&lt;/p>
&lt;h4 id="parameters-1">Parameters&lt;/h4>
&lt;dl>
&lt;dt>fmu_inst (void*)&lt;/dt>
&lt;dd>FMU provided instance data.&lt;/dd>
&lt;dt>mem_alloc (FmuMemAllocFunc)&lt;/dt>
&lt;dd>Function pointer for the memory allocation function which the Model should
use. Recommend using calloc().&lt;/dd>
&lt;dt>mem_free (FmuMemFreeFunc)&lt;/dt>
&lt;dd>Function pointer for the memory free function which the Model should use.
Typically free().&lt;/dd>
&lt;/dl>
&lt;h4 id="returns-1">Returns&lt;/h4>
&lt;dl>
&lt;dt>FmuModelDesc*&lt;/dt>
&lt;dd>A new FMU Model Descriptor object.&lt;/dd>
&lt;/dl>
&lt;h3 id="model_destroy">model_destroy&lt;/h3>
&lt;p>Called by &lt;code>fmi2FreeInstance()&lt;/code>.&lt;/p>
&lt;p>Called by &lt;code>fmi3FreeInstance()&lt;/code>.&lt;/p>
&lt;h4 id="parameters-2">Parameters&lt;/h4>
&lt;dl>
&lt;dt>model_desc (FmuModelDesc*)&lt;/dt>
&lt;dd>Model Descriptor, references various runtime functions and data.&lt;/dd>
&lt;/dl>
&lt;h4 id="returns-2">Returns&lt;/h4>
&lt;dl>
&lt;dt>0&lt;/dt>
&lt;dd>Success, an equivalent status is passed to the FMU Importer.&lt;/dd>
&lt;dt>!0&lt;/dt>
&lt;dd>Failure, an equivalent status is passed to the FMU Importer.&lt;/dd>
&lt;/dl>
&lt;h3 id="model_finalize">model_finalize&lt;/h3>
&lt;p>Releases the resources created by &lt;code>model_create()&lt;/code>.&lt;/p>
&lt;p>Called by &lt;code>fmi2FreeInstance()&lt;/code>.&lt;/p>
&lt;p>Called by &lt;code>fmi3FreeInstance()&lt;/code>.&lt;/p>
&lt;h4 id="parameters-3">Parameters&lt;/h4>
&lt;dl>
&lt;dt>model_desc (FmuModelDesc*)&lt;/dt>
&lt;dd>Model Descriptor, references various runtime functions and data.&lt;/dd>
&lt;/dl>
&lt;h3 id="model_init">model_init&lt;/h3>
&lt;p>Called by &lt;code>fmi2ExitInitializationMode()&lt;/code> as the FMU exits initialisation mode.&lt;/p>
&lt;p>Called by &lt;code>fmi3ExitInitializationMode()&lt;/code> as the FMU exits initialisation mode.&lt;/p>
&lt;h4 id="parameters-4">Parameters&lt;/h4>
&lt;dl>
&lt;dt>model_desc (FmuModelDesc*)&lt;/dt>
&lt;dd>Model Descriptor, references various runtime functions and data.&lt;/dd>
&lt;/dl>
&lt;h4 id="returns-3">Returns&lt;/h4>
&lt;dl>
&lt;dt>0&lt;/dt>
&lt;dd>Success, an equivalent status is passed to the FMU Importer.&lt;/dd>
&lt;dt>!0&lt;/dt>
&lt;dd>Failure, an equivalent status is passed to the FMU Importer.&lt;/dd>
&lt;/dl>
&lt;h3 id="model_step">model_step&lt;/h3>
&lt;p>Called by &lt;code>fmi2DoStep()&lt;/code>.&lt;/p>
&lt;p>Called by &lt;code>fmi3DoStep()&lt;/code>.&lt;/p>
&lt;h4 id="parameters-5">Parameters&lt;/h4>
&lt;dl>
&lt;dt>model_desc (FmuModelDesc*)&lt;/dt>
&lt;dd>Model Descriptor, references various runtime functions and data.&lt;/dd>
&lt;/dl>
&lt;h4 id="returns-4">Returns&lt;/h4>
&lt;dl>
&lt;dt>0&lt;/dt>
&lt;dd>Success, an equivalent status is passed to the FMU Importer.&lt;/dd>
&lt;dt>!0&lt;/dt>
&lt;dd>Failure, an equivalent status is passed to the FMU Importer.&lt;/dd>
&lt;/dl>
&lt;h3 id="model_terminate">model_terminate&lt;/h3>
&lt;p>Called by &lt;code>fmi2Terminate()&lt;/code>.&lt;/p>
&lt;p>Called by &lt;code>fmi3Terminate()&lt;/code>.&lt;/p>
&lt;h4 id="parameters-6">Parameters&lt;/h4>
&lt;dl>
&lt;dt>model_desc (FmuModelDesc*)&lt;/dt>
&lt;dd>Model Descriptor, references various runtime functions and data.&lt;/dd>
&lt;/dl>
&lt;h4 id="returns-5">Returns&lt;/h4>
&lt;dl>
&lt;dt>0&lt;/dt>
&lt;dd>Success, an equivalent status is passed to the FMU Importer.&lt;/dd>
&lt;dt>!0&lt;/dt>
&lt;dd>Failure, an equivalent status is passed to the FMU Importer.&lt;/dd>
&lt;/dl>
&lt;h3 id="storage_destroy">storage_destroy&lt;/h3>
&lt;p>Destroy any allocated storage.&lt;/p>
&lt;h4 id="parameters-7">Parameters&lt;/h4>
&lt;dl>
&lt;dt>model_desc (FmuModelDesc*)&lt;/dt>
&lt;dd>Model Descriptor.&lt;/dd>
&lt;/dl>
&lt;h4 id="returns-6">Returns&lt;/h4>
&lt;dl>
&lt;dt>0 (int)&lt;/dt>
&lt;dd>Success.&lt;/dd>
&lt;dt>+ve (int)&lt;/dt>
&lt;dd>Failure, inspect errno for the failing condition.&lt;/dd>
&lt;/dl>
&lt;h3 id="storage_get_bucket">storage_get_bucket&lt;/h3>
&lt;p>Returns a reference/pointer to the requested storage bucket.&lt;/p>
&lt;h4 id="parameters-8">Parameters&lt;/h4>
&lt;dl>
&lt;dt>model_desc (FmuModelDesc*)&lt;/dt>
&lt;dd>Model Descriptor.&lt;/dd>
&lt;dt>type (storage_type)&lt;/dt>
&lt;dd>Indicate the storage type bucket which should be retrieved.&lt;/dd>
&lt;/dl>
&lt;h4 id="returns-7">Returns&lt;/h4>
&lt;dl>
&lt;dt>storage_bucket*&lt;/dt>
&lt;dd>Reference to the requested storage bucket.&lt;/dd>
&lt;dt>NULL&lt;/dt>
&lt;dd>The specified storage bucket is not provisioned.&lt;/dd>
&lt;/dl>
&lt;h3 id="storage_init">storage_init&lt;/h3>
&lt;p>Initialise the storage subsystem for an FMU.&lt;/p>
&lt;h4 id="parameters-9">Parameters&lt;/h4>
&lt;dl>
&lt;dt>model_desc (FmuModelDesc*)&lt;/dt>
&lt;dd>Model Descriptor.&lt;/dd>
&lt;/dl>
&lt;h4 id="returns-8">Returns&lt;/h4>
&lt;dl>
&lt;dt>0 (int)&lt;/dt>
&lt;dd>Success.&lt;/dd>
&lt;dt>+ve (int)&lt;/dt>
&lt;dd>Failure, inspect errno for the failing condition.&lt;/dd>
&lt;/dl>
&lt;h3 id="storage_ref">storage_ref&lt;/h3>
&lt;p>Get a reference (pointer to) the specified storage value. The returned
reference must be cast to the provided storage_type by the caller before
accessing the storage value.&lt;/p>
&lt;h4 id="parameters-10">Parameters&lt;/h4>
&lt;dl>
&lt;dt>model_desc (FmuModelDesc*)&lt;/dt>
&lt;dd>Model Descriptor.&lt;/dd>
&lt;dt>vr (unsigned int)&lt;/dt>
&lt;dd>FMU Variable Reference.&lt;/dd>
&lt;dt>type (storage_type)&lt;/dt>
&lt;dd>Indicate the storage type bucket from which the storage reference should
be retrieved.&lt;/dd>
&lt;/dl>
&lt;h4 id="returns-9">Returns&lt;/h4>
&lt;dl>
&lt;dt>void*&lt;/dt>
&lt;dd>Reference to a storage value (caller must cast to storage_type).&lt;/dd>
&lt;dt>NULL&lt;/dt>
&lt;dd>A reference to the storage value could not be retrieved.&lt;/dd>
&lt;/dl>
&lt;h4 id="example-1">Example&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#include&lt;/span> &lt;span style="color:#8f5902;font-style:italic">&amp;lt;dse/fmi/fmu.h&amp;gt;&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#000">FmuModelDesc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">model_desc&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">set_int_value&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">unsigned&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">vr&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">value&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">ref&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#000">storage_ref&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">model_desc&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">vr&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">STORAGE_INT&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ref&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87">NULL&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">ref&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">value&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>